Определить сложность следующих алгоритмов. Сколько произойдет итераций?


1)
//==============================================

$n = 10000;
$array[]= [];

for ($i = 0; $i < $n; $i++) {
  for ($j = 1; $j < $n; $j *= 2) {
     $array[$i][$j]= true;
} }


Кол-во итераций = n * log2(n).
сложность = O(n*log2(n))



2)
//==============================================

$n = 10000;
$array[] = [];

for ($i = 0; $i < $n; $i += 2) {
  for ($j = $i; $j < $n; $j++) {
   $array[$i][$j]= true;
} }


кол-во итераций = n * n/2
пренебрегаем коэффициентом и получаем:
сложность = O(n в степени 2)


3)
//==============================================
$n = 10000;
$array[] = [];
foo(n);

function foo()  {
while(n > 0) {
  for ($j = sqrt(n); $j < $n; $j++) {
        n--;
        foo(n);
   } } }


кол-во итераций = n - (корень из n) = n (приблизительно);
с рекурсией = n * (n-1) * (n-2) * (n-3) ...
сложность = O(n!)
